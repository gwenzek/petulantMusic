import com.intellij.uiDesigner.core.GridConstraints
import com.intellij.uiDesigner.core.GridLayoutManager
import javax.swing._
import java.awt._

/**
 * Created by guillaume on 14/06/14.
 */
object TestWindowScala {
    def main(args: Array[String]) {
        val frame: JFrame = new JFrame("TestWindow")
        frame.setContentPane(new TestWindowScala().testWindow)
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)
        frame.pack()
        frame.setVisible(true)
    }
}

class TestWindowScala {

    private var durationComboBox: JComboBox[_] = null
    private var fileNumberField: JFormattedTextField = null
    var OKButton: JButton = null
    var testWindow: JPanel = null
    private var zoomWindow: JPanel = null
    private var imageWindow: JScrollPane = null
    var loadButton: JButton = null
    var trainButton: JButton = null
    private var imageName: JLabel = null
    $$$setupUI$$$

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private def $$$setupUI$$$ {
        testWindow = new JPanel
        testWindow.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1))
        val panel1: JPanel = new JPanel
        panel1.setLayout(new GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1))
        testWindow.add(panel1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false))
        zoomWindow = new JPanel
        zoomWindow.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1))
        panel1.add(zoomWindow, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, 1, 1, null, null, null, 0, false))
        val panel2: JPanel = new JPanel
        panel2.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1))
        panel1.add(panel2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false))
        durationComboBox = new JComboBox[String](Array("2xCroche", "Croche", "Noir", "Blanche", "Ronde"))
        panel2.add(durationComboBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false))
        fileNumberField = new JFormattedTextField
        panel2.add(fileNumberField, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false))
        val label1: JLabel = new JLabel
        label1.setText("Duration")
        panel2.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false))
        val label2: JLabel = new JLabel
        label2.setText("File number")
        panel2.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false))
        OKButton = new JButton
        OKButton.setText("OK")
        panel2.add(OKButton, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false))
        val panel3: JPanel = new JPanel
        panel3.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1))
        testWindow.add(panel3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(356, 24), null, 0, false))
        imageWindow = new JScrollPane
        panel3.add(imageWindow, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false))
        val toolBar1: JToolBar = new JToolBar
        testWindow.add(toolBar1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(-1, 20), null, 0, false))
        imageName = new JLabel
        imageName.setHorizontalAlignment(10)
        imageName.setMaximumSize(new Dimension(1000, 18))
        imageName.setText("no image loaded")
        toolBar1.add(imageName)
        loadButton = new JButton
        loadButton.setHorizontalAlignment(11)
        loadButton.setText("Load")
        toolBar1.add(loadButton)
        trainButton = new JButton
        trainButton.setHorizontalAlignment(11)
        trainButton.setText("Train")
        toolBar1.add(trainButton)
    }

    /**
     * @noinspection ALL
     */
    def $$$getRootComponent$$$: JComponent = {
        return testWindow
    }
}
